stages:
  - test # Run tests
  - build # Build assets
  - deploy # deploy

services:
  - postgres:14.2-bullseye

# variables:
#   POSTGRES_PASSWORD: test
#   DATABASE_URL: postgresql://postgres:test@postgres:5432/postgres
variables:
  DATABASE_URL: postgresql://postgres:bb857962ef9250a8@http://srv-captain--ikeya/postgres

# ## TESTING
# fast-api-unit-test-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - cd desgisn_service
#     - pip install -r requirements.txt
#     - python -m pytest

# lint-python-projects-job:
#   image: python:3-bullseye
#   stage: test
#   script:
#     - pip install flake8
#     - flake8 design_service

build-docker-master:
  image: docker:19.03.1
  stage: build
  services:
    - docker:19.03.1-dind
  before_script:
    - export DOCKER_REGISTRY_USER=$CI_REGISTRY_USER # built-in GitLab Registry User
    - export DOCKER_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD # built-in GitLab Registry Password
    - export DOCKER_REGISTRY_URL=$CI_REGISTRY # built-in GitLab Registry URL
    - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
    - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$CI_REGISTRY_IMAGE # Your repository prefixed with GitLab Registry URL
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry

  script:
    - cd design_service
    - echo "Building..." # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
    - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/design_service:$COMMIT_HASH
    - docker build -f ./Dockerfile --pull -t design_service_img .
    - docker tag design_service_img "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    - echo "Deploying on CapRover..."
    - docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
  only:
    - main

## BUILD
build-front-end-job:
  stage: build
  image: node:lts-bullseye
  # needs:
  #   - lint-python-projects-job
  variables:
    PUBLIC_URL: https://teamikeya.gitlab.io/ikeya
    REACT_APP_FAST_API: https://captain.sept-ct-8.mod3projects.com
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html # Make this a SPA
  artifacts:
    paths:
      - ghi/build/ # Save all of the files in the build path

pages: # THIS STEP MUST BE NAME PAGES
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    # THE FIRST PART OF THIS COMMAND MUST BE THE DIRECTORY
    # THAT YOU cd INTO TO BUILD IT PLUS THE build/ AT THE
    # END
    - mv ghi/build/ public
  artifacts:
    paths:
      - public
